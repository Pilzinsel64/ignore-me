name: Release snap for pull request

on:
  workflow_run:
    workflows: ["test"]
    types:
      - completed

jobs:
  upload:
    runs-on: ubuntu-latest
    environment: snapcraft
    env:
      SNAPCRAFT_TOKEN: ${{ secrets.SNAPCRAFT_TOKEN }}
    if: >
      ${{ github.event.workflow_run.event == 'pull_request' &&
      github.event.workflow_run.conclusion == 'success' }}
    steps:
      - name: Set initial commit status
        uses: actions/github-script@v6
        with:
          script: |
            const resp = await github.rest.repos.createCommitStatus({
              owner: context.repo.owner,
              repo: context.repo.repo,
              sha: context.sha,
              state: 'pending',
              description: 'This is a test',
            });
            console.log(JSON.stringify(resp));

      - name: Determine release channel
        uses: actions/github-script@v6
        id: determine-channel
        with:
          result-encoding: string
          script: |
            const workflowRun = await github.rest.actions.getWorkflowRun({
              owner: context.repo.owner,
              repo: context.repo.repo,
              run_id: ${{ github.event.workflow_run.id }},
            });

            const pullRequestCount = workflowRun.data.pull_requests.length;
            if (pullRequestCount != 1) {
              throw new Error(`Expected one pull request, but got ${pullRequestCount}`);
            }
            
            const pullRequest = workflowRun.data.pull_requests[0];
            return `latest/beta/pr-${pullRequest.number}`;

      - name: Download snap artifact
        uses: actions/github-script@v5
        with:
          script: |
            const artifacts = await github.rest.actions.listWorkflowRunArtifacts({
               owner: context.repo.owner,
               repo: context.repo.repo,
               run_id: ${{github.event.workflow_run.id }},
            });
            
            const snapArtifacts = artifacts.data.artifacts.filter((artifact) => {
              return artifact.name == "snap"
            });
            if (snapArtifacts.length != 1) {
              throw new Error(`Expected one snap artifact, but got ${snapArtifacts.length}`);
            }

            var download = await github.rest.actions.downloadArtifact({
               owner: context.repo.owner,
               repo: context.repo.repo,
               artifact_id: snapArtifacts[0].id,
               archive_format: 'zip',
            });
            var fs = require('fs');
            fs.writeFileSync('${{github.workspace}}/snap.zip', Buffer.from(download.data));

      - name: Extract snap artifact
        run: unzip snap.zip

      - name: Install snapcraft
        run: sudo apt-get update -qq && sudo snap install --classic snapcraft

      - name: Snapcraft login
        run: echo "$SNAPCRAFT_TOKEN" | snapcraft login --with -

      - name: Upload snap
        run: snapcraft upload *.snap --release="${{ steps.determine-channel.outputs.result }}"